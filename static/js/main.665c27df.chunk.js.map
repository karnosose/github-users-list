{"version":3,"sources":["User/User.js","User/User.style.js","UserForm/UserForm.js","UserForm/UserForm.style.js","EditableUser/EditableUser.js","EditableUser/EditableUser.style.js","UsersList/UsersList.js","UsersList/UsersList.style.js","serviceWorker.js","index.js"],"names":["User","_this$props","this","props","id","userName","avatar","githubUrl","classes","onEditClick","onDeleteClick","react_default","a","createElement","Grid","item","xs","sm","Card","className","card","CardMedia","component","alt","image","CardContent","Typography","gutterBottom","variant","login","Link","href","target","color","rel","CardActions","actions","Tooltip","title","Edit_default","editUser","onClick","Delete_default","deleteUser","Component","withStyles","theme","width","textAlign","margin","marginTop","borderRadius","display","background","fontWeight","textDecoration","padding","boxShadow","&:hover","marginBottom","justifyContent","UserForm","state","_this","handleUserNameChange","e","setState","value","handleGithubUrlChange","handleFormSubmit","onFormSubmit","onFormClose","root","noValidate","autoComplete","TextField","label","onChange","Button","EditableUser","editFormOpen","handleEdit","handleFormClose","handleSubmit","user","handleUserDelete","src_UserForm_UserForm","key","uuid","src_User_User","UsersList","isLoading","isEmpty","errorMessage","users","attrs","newUsers","map","localStorage","setItem","JSON","stringify","Object","objectSpread","userId","filter","getUsers","console","log","length","fetch","then","res","status","Error","json","html_url","avatar_url","catch","err","_this2","message","usersList","getItem","parse","fetchGithubUsersList","_this3","_this$state","Container","maxWidth","pageTitle","container","spacing","loading","src_EditableUser_EditableUser","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","src_UsersList_UsersList","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.665c27df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nimport {styles} from './User.style';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nclass User extends Component {\r\n\r\n  render() {\r\n    const {id, userName, avatar, githubUrl, classes, onEditClick, onDeleteClick} = this.props;\r\n\r\n    return (\r\n      <Grid item xs={6} sm={3}>\r\n        <Card className={classes.card}>\r\n          <CardMedia\r\n            className={classes.avatar}\r\n            component=\"img\"\r\n            alt=\"avatar\"\r\n            image={avatar}\r\n          />\r\n          <CardContent>\r\n            <Typography \r\n              gutterBottom\r\n              variant=\"h5\" \r\n              component=\"h2\"\r\n              className={classes.login}\r\n            >\r\n              {userName}\r\n            </Typography>\r\n            <Link \r\n              className={classes.githubUrl}\r\n              href={githubUrl} \r\n              target='_blank' \r\n              color=\"inherit\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              View github account\r\n            </Link>\r\n          </CardContent>\r\n          <CardActions className={classes.actions}>\r\n            <Tooltip title=\"Edit user\">\r\n              <EditIcon \r\n                className={classes.editUser} \r\n                onClick={onEditClick}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete user\">\r\n              <DeleteIcon \r\n                className={classes.deleteUser} \r\n                onClick={() => onDeleteClick(id)}\r\n              />\r\n            </Tooltip>\r\n          </CardActions>\r\n        \r\n      </Card>\r\n    </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  githubUrl: PropTypes.string.isRequired,\r\n\r\n};\r\n\r\n\r\nexport default withStyles(styles)(User);\r\n","export const styles = theme => ({\r\n  avatar: {\r\n    width: '80%',\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    marginTop: 20,\r\n    borderRadius: '50%'\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    margin:10,\r\n    display: 'inline-block',\r\n    textAlign:'center',\r\n    background: '#F6F6F6',\r\n  },\r\n  githubUrl: {\r\n    background: '#2b8093',\r\n    color: '#eef3fcf5',\r\n    fontWeight: 500,\r\n    textDecoration: 'none',\r\n    padding:10,\r\n    borderRadius: 4 ,\r\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '&:hover': {\r\n        textDecoration: 'none',\r\n        background: '#275c68'\r\n    }\r\n  },\r\n  login: {\r\n    marginBottom: '1em'\r\n  },\r\n  actions: {\r\n    justifyContent: 'center',\r\n  },\r\n  deleteUser: {\r\n    color: '#e51717',\r\n  },\r\n  editUser: {\r\n    color: '#673AB7',\r\n  }\r\n})\r\n    \r\n  ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {styles} from './UserForm.style';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nclass UserForm extends Component {\r\n  state = {\r\n    userName: this.props.userName || '',\r\n    githubUrl: this.props.githubUrl || '',\r\n  };\r\n\r\n  handleUserNameChange = (e) => {\r\n    this.setState({ userName: e.target.value });\r\n  };\r\n\r\n  handleGithubUrlChange = (e) => {\r\n    this.setState({ githubUrl: e.target.value });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    this.props.onFormSubmit({\r\n      id: this.props.id,\r\n      userName: this.state.userName,\r\n      githubUrl: this.state.githubUrl,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {avatar, classes, onFormClose} = this.props;\r\n\r\n    return (\r\n      <Grid item xs={6} sm={3}>\r\n        <Card className={classes.card}>\r\n          <CardHeader>\r\n          <CardMedia\r\n            className={classes.avatar}\r\n            component=\"img\"\r\n            alt=\"avatar\"\r\n            image={avatar}\r\n          />\r\n          <CardContent>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField \r\n                margin='dense'\r\n                value={this.state.userName} \r\n                id=\"outlined-basic\" \r\n                label=\"username\" \r\n                variant=\"outlined\" \r\n                onChange={this.handleUserNameChange}\r\n              />\r\n               <TextField \r\n                margin='dense'\r\n                value={this.state.githubUrl} \r\n                id=\"outlined-basic\" \r\n                label=\"githubUrl\" \r\n                variant=\"outlined\" \r\n                onChange={this.handleGithubUrlChange}\r\n              />\r\n            </form>\r\n          </CardContent>\r\n          </CardHeader>\r\n          <CardActions className={classes.actions}>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"default\"\r\n              onClick={this.handleFormSubmit}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"default\"\r\n              onClick={onFormClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </CardActions>\r\n      </Card>\r\n    </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nUserForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserForm);\r\n","export const styles = theme => ({\r\n    avatar: {\r\n      width: '80%',\r\n      textAlign: 'center',\r\n      margin: 'auto',\r\n      marginTop: 20,\r\n      borderRadius: '50%'\r\n    },\r\n    card: {\r\n      width: '100%',\r\n      margin:10,\r\n      display: 'inline-block',\r\n      textAlign:'center',\r\n      background: '#F6F6F6',\r\n    },\r\n    githubUrl: {\r\n      background: '#2b8093',\r\n      color: '#eef3fcf5',\r\n      fontWeight: 500,\r\n      textDecoration: 'none',\r\n      padding:10,\r\n      borderRadius: 4 ,\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n      '&:hover': {\r\n          textDecoration: 'none',\r\n          background: '#275c68'\r\n      }\r\n    },\r\n    login: {\r\n      marginBottom: '1em'\r\n    },\r\n    actions: {\r\n      justifyContent: 'center',\r\n    },\r\n    deleteUser: {\r\n      color: '#e51717',\r\n    },\r\n    editUser: {\r\n      color: '#673AB7',\r\n    }\r\n  })\r\n      \r\n    ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\n\r\nimport User from '../User/User';\r\nimport UserForm from '../UserForm/UserForm'\r\n\r\nimport {styles} from './EditableUser.style';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nclass EditableUser extends Component {\r\n  state = {\r\n      editFormOpen: false,\r\n  };\r\n\r\n  handleEdit = () => {\r\n    this.setState({editFormOpen: true})\r\n  }\r\n\r\n  handleFormClose = () => {\r\n    this.setState({ editFormOpen: false });\r\n  };\r\n\r\n  handleSubmit = (user) => {\r\n    this.props.onFormSubmit(user);\r\n    this.setState({ editFormOpen: false });\r\n  };\r\n\r\n  handleUserDelete = (user) => {\r\n    this.props.deleteUser(user);\r\n  }\r\n\r\n  render() {\r\n\r\n    const {id, userName, avatar, githubUrl} = this.props\r\n\r\n    if (this.state.editFormOpen) {\r\n      return (\r\n        <UserForm\r\n          key={uuid()} \r\n          id={id}\r\n          userName={userName}\r\n          avatar={avatar}\r\n          githubUrl={githubUrl}\r\n          onFormSubmit={this.handleSubmit}\r\n          onFormClose={this.handleFormClose}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <User\r\n          key={uuid()} \r\n          id={id}\r\n          userName={userName}\r\n          avatar={avatar}\r\n          githubUrl={githubUrl}\r\n          onEditClick={this.handleEdit}\r\n          onDeleteClick={this.handleUserDelete}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n  \r\nEditableUser.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EditableUser);\r\n","export const styles = theme => ({\r\n   \r\n})\r\n    \r\n  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'react-uuid';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography';\n\nimport EditableUser from '../EditableUser/EditableUser'\n\nimport {styles} from './UsersList.style';\nimport { withStyles } from '@material-ui/styles';\n\n\nclass UsersList extends Component {\n  state = {\n    isLoading: true,\n    isEmpty: false,\n    errorMessage: '',\n    users: []\n  }\n\n  async componentDidMount() {\n   const users = await this.getUsers();\n   console.log('dd', users);\n    \n    this.setState({\n      users: users,\n      isEmpty: users.length === 0,\n      isLoading: false,\n      errorMessage: '',\n    })\n    \n\n  }\n\n   async fetchGithubUsersList() {\n    const usersList = await fetch('https://api.github.com/users')\n    .then(res => {\n      if (res.status === 404) {\n        throw new Error(\"No Data\");\n      }\n      return res;\n    })\n    .then(users => users.json())\n    .then(users => {\n      users = users.map(user => {\n        return  {\n          id: user.id,\n          userName: user.login,\n          githubUrl: user.html_url,\n          avatar: user.avatar_url,\n        }\n      })\n      return users\n    })    \n    .catch(err =>\n      this.setState({\n        isLoading: false,\n        errorMessage: err.message,\n        users: []\n      })\n    );\n\n    return usersList;\n  }\n\n  async getUsers () {\n    let users = localStorage.getItem('users');\n\n    if(users) {\n      users = JSON.parse(localStorage.getItem('users'));\n\n    } else {\n      users = await this.fetchGithubUsersList()\n      localStorage.setItem(('users'), JSON.stringify(users));\n    }\n    \n    return users;\n  }\n\n  handleFormSubmit = (attrs) => {\n    const newUsers = this.state.users.map(user => {\n      if (user.id === attrs.id) {\n        user.userName = attrs.userName;\n        user.githubUrl = attrs.githubUrl;\n      } \n      return user;\n    })\n\n    localStorage.setItem('users', JSON.stringify(newUsers))\n    this.setState({\n      ...this.state,\n      users: newUsers\n    });\n  };\n\n  deleteUser = (userId) => {\n    const newUsers = this.state.users.filter(user => user.id !== userId);\n    localStorage.setItem('users', JSON.stringify(newUsers));\n    this.setState({\n      ...this.state,\n      users: newUsers,\n    })\n  }\n\n  render() {\n    console.log(this.state)\n\n    const {isEmpty, isLoading, errorMessage, users} = this.state;\n    const { classes } = this.props;\n    console.log(10,users)\n    return (\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h3\" component=\"h1\" className={classes.pageTitle}>\n          Github users list\n        </Typography>\n        <Grid container spacing={6}>\n\n        {errorMessage ? (\n          <p>{errorMessage}</p>\n         ) : isEmpty ? (\n           <p>No Data</p>\n         ) : isLoading ? (\n          <div className={classes.loading}>\n            {/* <CircularProgress /> */}\n            ...\n          </div>\n         ) : (\n\n          users.map((user, id) => (\n            <EditableUser\n              key={uuid()} \n              id={user.id}\n              userName={user.userName}\n              avatar={user.avatar}\n              githubUrl={user.githubUrl}\n              onFormSubmit={this.handleFormSubmit}\n              deleteUser={this.deleteUser}\n\n            />           \n           ))\n         )\n        }\n        </Grid>\n\n      </Container>\n    );\n  }\n}\n\nUsersList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(UsersList);\n","export const styles = theme => ({\n  pageTitle: {\n    margin: '40px 0',\n    textAlign: 'center'\n  },\n  loading: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    margin: '200px auto'\n  },\n})\n  \n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UsersList from './UsersList/UsersList';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<UsersList />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}